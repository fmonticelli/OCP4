#---------------------------------------------------------------------
# Global settings
#---------------------------------------------------------------------
global
    log         127.0.0.1 local2 info
    chroot      /var/lib/haproxy
    pidfile     /var/run/haproxy.pid
    maxconn     4000
    user        haproxy
    group       haproxy
    daemon

#---------------------------------------------------------------------
# common defaults that all the 'listen' and 'backend' sections will
# use if not designated in their block
#---------------------------------------------------------------------
defaults
    log                     global
    timeout connect         5s
    timeout client          10m
    timeout server          10m
    option forwardfor       # Forward X-Forwarded-For

frontend kubernetes_api
    bind 0.0.0.0:6443
    default_backend kubernetes_api

backend kubernetes_api
    balance roundrobin
    option ssl-hello-chk
    server bootstrap <FQDN bootstrap>:6443 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2
    server master01 <FQDN master 1>:6443 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2
    server master02 <FQDD master 2>:6443 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2
    server master03 <FQDN master 3>:6443 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2

frontend machine_config
    bind 0.0.0.0:22623
    default_backend machine_config

backend machine_config
    balance roundrobin
    option ssl-hello-chk
    server bootstrap <FQDN bootstrap>:22623 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2
    server master01 <FQDN master 1>:22623 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2
    server master02 <FQDN master 2>:22623 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2
    server master03 <FQDN master 3>:22523 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2

frontend router_https
    bind 0.0.0.0:443
    default_backend router_https

backend router_https
    balance roundrobin
    option ssl-hello-chk
    http-request set-header X-Forwarded-Host %[req.hdr(host)]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-Proto https if { ssl_fc }
    http-request set-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
    http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)];proto-version=%[req.hdr(X-Forwarded-Proto-Version)]
    server infra01 <FQDN infra 1>:443 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2
    server infra02 <FQDN infra 2>:443 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2
    server infra03 <FQDN infra 3>:443 check fall 5 inter 2000 on-marked-down shutdown-sessions rise 2

frontend router_http
    mode http
    option httplog
    bind 0.0.0.0:80
    default_backend router_http

backend router_http
    mode http
    balance roundrobin
    http-request set-header X-Forwarded-Host %[req.hdr(host)]
    http-request set-header X-Forwarded-Port %[dst_port]
    http-request set-header X-Forwarded-Proto http if !{ ssl_fc }
    http-request set-header X-Forwarded-Proto-Version h2 if { ssl_fc_alpn -i h2 }
    http-request add-header Forwarded for=%[src];host=%[req.hdr(host)];proto=%[req.hdr(X-Forwarded-Proto)];proto-version=%[req.hdr(X-Forwarded-Proto-Version)]
    server infra01 <FQDN infra 1>:80 check
    server infra02 <FQDN infra 2>:80 check
    server infra03 >FQDN infra 3>:80 check
